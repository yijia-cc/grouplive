schema {
    query: Query
    mutation: Mutation
}

type Query {
    """
    Revise API to utilize graphql nest & nested parameters
    https://graphql.org/learn/schema/#arguments
    """
    amenityTypes(start: Datetime!, end: Datetime!): [AmenityType!]!
    operationalTime(amenityId: ID!, start: Datetime!, end: Datetime!): [TimeSlot!]!
    pastReservations: [Reservation!]!
    upcomingReservations: [Reservation!]!

}

type Mutation {
    holdAmenity(id: ID!): Void
    makeReservation(reservation: Reservation!): ID!
    updateReservation(reservation: Reservation!): Void
    cancelReservation(id: ID!): Void
    createAmenityType(amenityType: AmenityType!): ID!
    addAmenity(amenity: Amenity!): ID!
    listReservations(amenityId: ID!): [Reservation!]!
}

type Reservation {
    id: ID
    amenityID: ID
    timeRange: TimeRange
}

type Amenity {
    id: ID
    name: String
}

type AmenityType {
    id: ID
    name: String
    iconUrl: String
}

type TimeSlot {
    type: TimeSlotType
    timeRange: TimeRange
    holdDuration: Duration
}

type TimeRange {
    start: Datetime
    end: Datetime
}

enum TimeSlotType {
    AVAILABLE
    BOOKED_BY_OTHERS
    BOOKED_BY_ME
}

scalar Datetime
scalar Duration
scalar Void