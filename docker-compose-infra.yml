version: "3.3"
services:
  # Infrastructure
  db:
    image: mysql:8.0.25
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    restart: always
    volumes:
      - /var/lib/mysql:/var/lib/mysql
  drone-server:
    image: drone/drone:1.10.1
    environment:
      - DRONE_SERVER_HOST=ci.allgame.fun
      - DRONE_SERVER_PROTO=http
      - DRONE_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_USER_CREATE=username:${DRONE_ADMIN_USERNAME},admin:true
    volumes:
      - /var/lib/drone:/data
  drone-runner:
    image: drone/drone-runner-docker:1.6.3
    environment:
      - DRONE_RPC_HOST=drone-server
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=10
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "drone-server"
  lb:
    build: ./proxy
    ports:
      - "80:80"
      - "8000:8000"
